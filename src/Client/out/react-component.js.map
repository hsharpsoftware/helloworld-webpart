{"version":3,"sources":["..\\react-component.fsx"],"names":[],"mappings":";;;;;;;;;;AAeK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACD;AADC;AAAA;AAAO;;AAgBI,aACR;AAAA;AAEA,oCAAM,EAAN,EACI,wBAAS;AAAA;AAAA,SAAT,EACI,oBAAK,EAAL,EAAyB,uBAAR,SAA0B,gBAAH,iBAAoC,wBAA3D,CAAjB,CADJ,EAEI,uBAAQ;AAAA;AAAA;AAAA;AAAA,SAAR,CAFJ,CADJ;AASC;;AAtBD,aACA;AAAA,SAOK;AAAA;AAAoB,SAPzB,8BACI,oBAGO,aAFF,0BAAD,MAEG,cAHP,EAKA;AAAA;AAAA;AAAW,SALX,CADJ;AAOyB;;AAd5B;;AA8BD,OACA;AAAA,WACI,uBAAmB,UAAnB,CADJ,EAEI,kCAFJ;AAGC;AAED,OACA;AAAA,KASK;AAAA;AAAoB,KATzB,8BACI,oBAGO,aAFF,0BAAD,MAEG,cAHP,EAKA;AAAA;AACA;AACA;AAAA;AAAiF,KAPjF,CADJ;AASyB","file":"react-component.js","sourcesContent":["\r\n#r \"../../node_modules/fable-core/Fable.Core.dll\"\r\n#r \"../../node_modules/fable-react/Fable.React.dll\"\r\n#r \"../../node_modules/fable-import-sp-pnp-js/fable-import-sp-pnp-js.dll\"\r\n#r \"../../node_modules/fable-powerpack/Fable.PowerPack.dll\"\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Import\r\nopen Fable.PowerPack\r\n\r\nmodule R = Fable.Helpers.React\r\nopen R.Props\r\n\r\ntype TodoApp(props) =\r\n    inherit React.Component<obj,obj>(props)\r\n    do base.setInitState()\r\n\r\n    let mutable web: sharepoint.webs.Web = null\r\n\r\n    let getWeb () =\r\n        async {            \r\n            let! _web = \r\n                (pnp.Globals.sp.web.select( [|\"Title\"|] ) :> sharepoint.queryable.Queryable).get()  \r\n                |> Promise.map( fun w -> (w :?> sharepoint.webs.Web ) )              \r\n                |> Async.AwaitPromise\r\n\r\n            web <- _web\r\n        } |> Async.StartImmediate\r\n\r\n    member this.render () =\r\n        getWeb()\r\n\r\n        R.div [] [\r\n            R.header [ ClassName \"header\" ] [\r\n                R.h1 [] [ R.str (sprintf \"todos on %s\" (if isNull web then \"localhost\" else web?Title.ToString() ) ) ]\r\n                R.input [\r\n                    ClassName \"new-todo\"\r\n                    Placeholder \"What needs to be done?\"\r\n                    AutoFocus true\r\n                ] []\r\n            ]\r\n        ]\r\n\r\nlet renderTodoApp (elementId:string) = \r\n    ReactDom.render(\r\n        R.com<TodoApp,_,_> [] [],\r\n        Browser.document.getElementById(elementId)\r\n    )\r\n\r\nlet testWebTitle () =\r\n    async {            \r\n        let! _web = \r\n            (pnp.Globals.sp.web.select( [|\"Title\"|] ) :> sharepoint.queryable.Queryable).get()  \r\n            |> Promise.map( fun w -> (w :?> sharepoint.webs.Web ) )              \r\n            |> Async.AwaitPromise\r\n\r\n        Fable.Import.Browser.console.log \"_web\"\r\n        Fable.Import.Browser.console.log _web\r\n        Fable.Import.Browser.console.log \"----------------------------------------------\"\r\n    } |> Async.StartImmediate\r\n"]}